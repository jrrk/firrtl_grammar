circuit FullAdder : @[:@2.0]
  module FullAdder : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    input io_a : UInt<1> @[:@6.4]
    input io_b : UInt<1> @[:@6.4]
    input io_cin : UInt<1> @[:@6.4]
    output io_sum : UInt<1> @[:@6.4]
    output io_cout : UInt<1> @[:@6.4]
  
    node a_xor_b = xor(io_a, io_b) @[FullAdder.scala 16:22:@8.4]
    node _T_15 = xor(a_xor_b, io_cin) @[FullAdder.scala 17:21:@9.4]
    node a_and_b = and(io_a, io_b) @[FullAdder.scala 19:22:@11.4]
    node b_and_cin = and(io_b, io_cin) @[FullAdder.scala 20:24:@12.4]
    node a_and_cin = and(io_a, io_cin) @[FullAdder.scala 21:24:@13.4]
    node _T_16 = or(a_and_b, b_and_cin) @[FullAdder.scala 22:22:@14.4]
    node _T_17 = or(_T_16, a_and_cin) @[FullAdder.scala 22:34:@15.4]
    io_sum <= _T_15 @[FullAdder.scala 17:10:@10.4]
    io_cout <= _T_17 @[FullAdder.scala 22:11:@16.4]
