circuit ByteSelector : @[:@2.0]
  module ByteSelector : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    input io_in : UInt<32> @[:@6.4]
    input io_offset : UInt<2> @[:@6.4]
    output io_out : UInt<8> @[:@6.4]
  
    node _T_13 = eq(io_offset, UInt<2>("h0")) @[ByteSelector.scala 13:19:@9.4]
    node _T_14 = bits(io_in, 7, 0) @[ByteSelector.scala 14:20:@11.6]
    node _T_16 = eq(io_offset, UInt<1>("h1")) @[ByteSelector.scala 15:26:@15.6]
    node _T_17 = bits(io_in, 15, 8) @[ByteSelector.scala 16:20:@17.8]
    node _T_19 = eq(io_offset, UInt<2>("h2")) @[ByteSelector.scala 17:26:@21.8]
    node _T_20 = bits(io_in, 23, 16) @[ByteSelector.scala 18:20:@23.10]
    node _T_21 = bits(io_in, 31, 24) @[ByteSelector.scala 20:20:@27.10]
    node _GEN_0 = mux(_T_19, _T_20, _T_21) @[ByteSelector.scala 17:35:@22.8]
    node _GEN_1 = mux(_T_16, _T_17, _GEN_0) @[ByteSelector.scala 15:35:@16.6]
    node _GEN_2 = mux(_T_13, _T_14, _GEN_1) @[ByteSelector.scala 13:33:@10.4]
    io_out <= _GEN_2 @[ByteSelector.scala 12:10:@8.4 ByteSelector.scala 14:12:@12.6 ByteSelector.scala 16:12:@18.8 ByteSelector.scala 18:12:@24.10 ByteSelector.scala 20:12:@28.10]
